"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/store/chatStore.ts":
/*!********************************!*\
  !*** ./src/store/chatStore.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useChatStore: function() { return /* binding */ useChatStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n/* harmony import */ var _utils_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/utils/storage */ \"(app-pages-browser)/./src/utils/storage.ts\");\n\n\n\nconst defaultChatSettings = {\n    model: \"gemini-2.0-flash\",\n    temperature: 0.7,\n    maxTokens: 2048,\n    systemPrompt: \"\"\n};\nconst useChatStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_2__.persist)((set, get)=>({\n        // State\n        sessions: {},\n        activeSessionId: null,\n        isLoading: false,\n        error: null,\n        chatSettings: defaultChatSettings,\n        // Session management\n        createSession: (model)=>{\n            const sessionId = Date.now().toString();\n            const newSession = {\n                id: sessionId,\n                title: \"New Chat\",\n                messages: [],\n                model,\n                createdAt: Date.now(),\n                updatedAt: Date.now(),\n                contextWindow: {\n                    maxTokens: defaultChatSettings.maxTokens,\n                    currentTokens: 0,\n                    messages: []\n                }\n            };\n            set((state)=>({\n                    sessions: {\n                        ...state.sessions,\n                        [sessionId]: newSession\n                    },\n                    activeSessionId: sessionId\n                }));\n            (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.saveChatSession)(newSession);\n            return sessionId;\n        },\n        deleteSession: (sessionId)=>{\n            set((state)=>{\n                const { [sessionId]: _, ...sessions } = state.sessions;\n                const activeSessionId = state.activeSessionId === sessionId ? Object.keys(sessions)[0] || null : state.activeSessionId;\n                (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.deleteChatSession)(sessionId);\n                return {\n                    sessions,\n                    activeSessionId\n                };\n            });\n        },\n        setActiveSession: (sessionId)=>set({\n                activeSessionId: sessionId\n            }),\n        // Message management\n        addMessage: (sessionId, message)=>{\n            set((state)=>{\n                const session = state.sessions[sessionId];\n                if (!session) return state;\n                const updatedSession = {\n                    ...session,\n                    messages: [\n                        ...session.messages,\n                        message\n                    ],\n                    updatedAt: Date.now(),\n                    contextWindow: {\n                        ...session.contextWindow,\n                        messages: [\n                            ...session.contextWindow.messages,\n                            message\n                        ]\n                    }\n                };\n                (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.saveChatSession)(updatedSession);\n                return {\n                    sessions: {\n                        ...state.sessions,\n                        [sessionId]: updatedSession\n                    }\n                };\n            });\n        },\n        updateMessage: (sessionId, messageIndex, content)=>{\n            set((state)=>{\n                const session = state.sessions[sessionId];\n                if (!session) return state;\n                const messages = [\n                    ...session.messages\n                ];\n                messages[messageIndex] = {\n                    ...messages[messageIndex],\n                    content\n                };\n                const contextMessages = [\n                    ...session.contextWindow.messages\n                ];\n                if (messageIndex < contextMessages.length) {\n                    contextMessages[messageIndex] = {\n                        ...contextMessages[messageIndex],\n                        content\n                    };\n                }\n                const updatedSession = {\n                    ...session,\n                    messages,\n                    updatedAt: Date.now(),\n                    contextWindow: {\n                        ...session.contextWindow,\n                        messages: contextMessages\n                    }\n                };\n                (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.saveChatSession)(updatedSession);\n                return {\n                    sessions: {\n                        ...state.sessions,\n                        [sessionId]: updatedSession\n                    }\n                };\n            });\n        },\n        deleteMessage: (sessionId, messageIndex)=>{\n            set((state)=>{\n                const session = state.sessions[sessionId];\n                if (!session) return state;\n                const messages = session.messages.filter((_, i)=>i !== messageIndex);\n                const contextMessages = session.contextWindow.messages.filter((_, i)=>i !== messageIndex);\n                const updatedSession = {\n                    ...session,\n                    messages,\n                    updatedAt: Date.now(),\n                    contextWindow: {\n                        ...session.contextWindow,\n                        messages: contextMessages\n                    }\n                };\n                (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.saveChatSession)(updatedSession);\n                return {\n                    sessions: {\n                        ...state.sessions,\n                        [sessionId]: updatedSession\n                    }\n                };\n            });\n        },\n        // Settings management\n        updateChatSettings: (settings)=>set((state)=>({\n                    chatSettings: {\n                        ...state.chatSettings,\n                        ...settings\n                    }\n                })),\n        // State management\n        setLoading: (isLoading)=>set({\n                isLoading\n            }),\n        setError: (error)=>set({\n                error\n            })\n    }), {\n    name: \"llm-wrapper-chat\",\n    partialize: (state)=>({\n            sessions: state.sessions,\n            chatSettings: state.chatSettings\n        })\n}));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/chatStore.ts\n"));

/***/ })

});