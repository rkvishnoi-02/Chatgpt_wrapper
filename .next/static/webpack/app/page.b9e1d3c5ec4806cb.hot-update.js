"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/store/chatStore.ts":
/*!********************************!*\
  !*** ./src/store/chatStore.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useChatStore: function() { return /* binding */ useChatStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n/* harmony import */ var _utils_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/utils/storage */ \"(app-pages-browser)/./src/utils/storage.ts\");\n\n\n\nconst useChatStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_2__.persist)((set, get)=>({\n        // State\n        sessions: {},\n        activeSessionId: null,\n        isLoading: false,\n        error: null,\n        chatSettings: {\n            model: \"gemini-2.0-flash\",\n            temperature: 0.7,\n            maxTokens: 2048,\n            systemPrompt: \"\"\n        },\n        // Session management\n        createSession: (model)=>{\n            const sessionId = Date.now().toString();\n            const newSession = {\n                id: sessionId,\n                title: \"New Chat\",\n                messages: [],\n                model,\n                createdAt: Date.now(),\n                updatedAt: Date.now(),\n                contextWindow: {\n                    maxTokens: 2048,\n                    currentTokens: 0,\n                    messages: []\n                }\n            };\n            set((state)=>({\n                    sessions: {\n                        ...state.sessions,\n                        [sessionId]: newSession\n                    },\n                    activeSessionId: sessionId\n                }));\n            (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.saveChatSession)(newSession);\n            return sessionId;\n        },\n        deleteSession: (sessionId)=>{\n            set((state)=>{\n                const { [sessionId]: _, ...sessions } = state.sessions;\n                const activeSessionId = state.activeSessionId === sessionId ? Object.keys(sessions)[0] || null : state.activeSessionId;\n                (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.deleteChatSession)(sessionId);\n                return {\n                    sessions,\n                    activeSessionId\n                };\n            });\n        },\n        setActiveSession: (sessionId)=>set({\n                activeSessionId: sessionId\n            }),\n        // Message management\n        addMessage: (sessionId, message)=>{\n            set((state)=>{\n                const session = state.sessions[sessionId];\n                if (!session) return state;\n                const updatedSession = {\n                    ...session,\n                    messages: [\n                        ...session.messages,\n                        message\n                    ],\n                    updatedAt: Date.now()\n                };\n                (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.saveChatSession)(updatedSession);\n                return {\n                    sessions: {\n                        ...state.sessions,\n                        [sessionId]: updatedSession\n                    }\n                };\n            });\n        },\n        updateMessage: (sessionId, messageIndex, content)=>{\n            set((state)=>{\n                const session = state.sessions[sessionId];\n                if (!session) return state;\n                const messages = [\n                    ...session.messages\n                ];\n                messages[messageIndex] = {\n                    ...messages[messageIndex],\n                    content\n                };\n                const updatedSession = {\n                    ...session,\n                    messages,\n                    updatedAt: Date.now()\n                };\n                (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.saveChatSession)(updatedSession);\n                return {\n                    sessions: {\n                        ...state.sessions,\n                        [sessionId]: updatedSession\n                    }\n                };\n            });\n        },\n        deleteMessage: (sessionId, messageIndex)=>{\n            set((state)=>{\n                const session = state.sessions[sessionId];\n                if (!session) return state;\n                const messages = session.messages.filter((_, i)=>i !== messageIndex);\n                const updatedSession = {\n                    ...session,\n                    messages,\n                    updatedAt: Date.now()\n                };\n                (0,_utils_storage__WEBPACK_IMPORTED_MODULE_0__.saveChatSession)(updatedSession);\n                return {\n                    sessions: {\n                        ...state.sessions,\n                        [sessionId]: updatedSession\n                    }\n                };\n            });\n        },\n        // Settings management\n        updateChatSettings: (settings)=>set((state)=>({\n                    chatSettings: {\n                        ...state.chatSettings,\n                        ...settings\n                    }\n                })),\n        // State management\n        setLoading: (isLoading)=>set({\n                isLoading\n            }),\n        setError: (error)=>set({\n                error\n            })\n    }), {\n    name: \"llm-wrapper-chat\",\n    partialize: (state)=>({\n            sessions: state.sessions,\n            chatSettings: state.chatSettings\n        })\n}));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/chatStore.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/utils/storage.ts":
/*!******************************!*\
  !*** ./src/utils/storage.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanupStorage: function() { return /* binding */ cleanupStorage; },\n/* harmony export */   clearStorage: function() { return /* binding */ clearStorage; },\n/* harmony export */   deleteChatSession: function() { return /* binding */ deleteChatSession; },\n/* harmony export */   getAllChatSessions: function() { return /* binding */ getAllChatSessions; },\n/* harmony export */   getChatSession: function() { return /* binding */ getChatSession; },\n/* harmony export */   getStorageItem: function() { return /* binding */ getStorageItem; },\n/* harmony export */   migrateLocalStorage: function() { return /* binding */ migrateLocalStorage; },\n/* harmony export */   removeStorageItem: function() { return /* binding */ removeStorageItem; },\n/* harmony export */   saveChatSession: function() { return /* binding */ saveChatSession; },\n/* harmony export */   setStorageItem: function() { return /* binding */ setStorageItem; },\n/* harmony export */   updateChatSessionTitle: function() { return /* binding */ updateChatSessionTitle; }\n/* harmony export */ });\n/**\r\n * Local storage utilities with type safety\r\n */ const STORAGE_PREFIX = \"llm-wrapper-\";\nconst SESSION_PREFIX = \"chat-session-\";\nconst SESSION_INDEX_KEY = \"chat-sessions\";\nfunction setStorageItem(key, value) {\n    try {\n        const serializedValue = JSON.stringify(value);\n        localStorage.setItem(\"\".concat(STORAGE_PREFIX).concat(key), serializedValue);\n    } catch (error) {\n        console.error(\"Error saving to localStorage:\", error);\n    }\n}\nfunction getStorageItem(key, defaultValue) {\n    try {\n        const item = localStorage.getItem(\"\".concat(STORAGE_PREFIX).concat(key));\n        if (!item) return defaultValue;\n        return JSON.parse(item);\n    } catch (error) {\n        console.error(\"Error reading from localStorage:\", error);\n        return defaultValue;\n    }\n}\nfunction removeStorageItem(key) {\n    try {\n        localStorage.removeItem(\"\".concat(STORAGE_PREFIX).concat(key));\n    } catch (error) {\n        console.error(\"Error removing from localStorage:\", error);\n    }\n}\nfunction clearStorage() {\n    try {\n        Object.keys(localStorage).filter((key)=>key.startsWith(STORAGE_PREFIX)).forEach((key)=>localStorage.removeItem(key));\n    } catch (error) {\n        console.error(\"Error clearing localStorage:\", error);\n    }\n}\n/**\r\n * Session management utilities\r\n */ function saveChatSession(session) {\n    try {\n        // Save the session\n        setStorageItem(\"\".concat(SESSION_PREFIX).concat(session.id), session);\n        // Update session index\n        const sessions = getStorageItem(SESSION_INDEX_KEY, []);\n        if (!sessions.includes(session.id)) {\n            sessions.push(session.id);\n            setStorageItem(SESSION_INDEX_KEY, sessions);\n        }\n    } catch (error) {\n        console.error(\"Error saving chat session:\", error);\n    }\n}\nfunction getChatSession(sessionId) {\n    return getStorageItem(\"\".concat(SESSION_PREFIX).concat(sessionId), null);\n}\nfunction getAllChatSessions() {\n    try {\n        const sessions = getStorageItem(SESSION_INDEX_KEY, []);\n        return sessions.map((id)=>getChatSession(id)).filter((session)=>session !== null).sort((a, b)=>b.updatedAt - a.updatedAt);\n    } catch (error) {\n        console.error(\"Error getting chat sessions:\", error);\n        return [];\n    }\n}\nfunction deleteChatSession(sessionId) {\n    try {\n        // Remove the session\n        removeStorageItem(\"\".concat(SESSION_PREFIX).concat(sessionId));\n        // Update session index\n        const sessions = getStorageItem(SESSION_INDEX_KEY, []);\n        setStorageItem(SESSION_INDEX_KEY, sessions.filter((id)=>id !== sessionId));\n    } catch (error) {\n        console.error(\"Error deleting chat session:\", error);\n    }\n}\nfunction updateChatSessionTitle(sessionId, title) {\n    try {\n        const session = getChatSession(sessionId);\n        if (session) {\n            session.title = title;\n            session.updatedAt = Date.now();\n            saveChatSession(session);\n        }\n    } catch (error) {\n        console.error(\"Error updating chat session title:\", error);\n    }\n}\nfunction migrateLocalStorage() {\n    try {\n        // Add version to storage items for future migrations\n        const version = getStorageItem(\"version\", \"1.0.0\");\n        // Migrate old chat sessions to new format if version is older\n        if (version === \"1.0.0\") {\n            const sessions = getAllChatSessions();\n            sessions.forEach((session)=>{\n                if (!session.contextWindow) {\n                    session.contextWindow = {\n                        maxTokens: 2048,\n                        currentTokens: 0,\n                        messages: session.messages\n                    };\n                    saveChatSession(session);\n                }\n            });\n            setStorageItem(\"version\", \"1.1.0\");\n        }\n    // Add future migrations here as the app evolves\n    } catch (error) {\n        console.error(\"Error during storage migration:\", error);\n    }\n}\nfunction cleanupStorage() {\n    try {\n        // Remove any expired or invalid items\n        const now = Date.now();\n        const maxAge = 30 * 24 * 60 * 60 * 1000; // 30 days\n        Object.keys(localStorage).filter((key)=>key.startsWith(STORAGE_PREFIX)).forEach((key)=>{\n            const value = localStorage.getItem(key);\n            if (value) {\n                try {\n                    const parsed = JSON.parse(value);\n                    // Remove old sessions\n                    if (key.startsWith(STORAGE_PREFIX + SESSION_PREFIX) && parsed.updatedAt && now - parsed.updatedAt > maxAge) {\n                        localStorage.removeItem(key);\n                    } else {\n                        // Validate JSON structure\n                        JSON.parse(value);\n                    }\n                } catch (e) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    } catch (error) {\n        console.error(\"Error during storage cleanup:\", error);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/storage.ts\n"));

/***/ })

});